generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  TRAINER
  STUDENT
}

model User {
  user_id  Int      @id @default(autoincrement())
  name     String
  email    String   @unique
  role     UserRole
  password String

  gyms      Gym[]
  payments  Payment[]
  exercises Exercise[]
  students  Student[]
}

model Gym {
  gym_id   Int    @id @default(autoincrement())
  name     String
  address  String
  phone    String
  schedule String
  owner_id Int    @unique

  owner       User         @relation(fields: [owner_id], references: [user_id])
  memberships Membership[]
  classes     Class[]
  trainers    Trainer[]
  students    Student[]
  inventory   Inventory[]
}

model Membership {
  membership_id Int    @id @default(autoincrement())
  name          String
  duration      String
  price         String
  description   String
  gym_id        Int

  gym      Gym       @relation(fields: [gym_id], references: [gym_id])
  payments Payment[]
}

model Class {
  class_id   Int      @id @default(autoincrement())
  name       String
  schedule   DateTime
  trainer_id Int      @unique
  gym_id     Int

  trainer Trainer @relation(fields: [trainer_id], references: [trainer_id])
  gym     Gym     @relation(fields: [gym_id], references: [gym_id])
}

model Trainer {
  trainer_id Int    @id @default(autoincrement())
  name       String
  specialty  String
  class_id   Int?
  gym_id     Int

  class Class?
  gym   Gym    @relation(fields: [gym_id], references: [gym_id])
}

model Student {
  student_id Int      @id @default(autoincrement())
  name       String
  birth_date DateTime
  user_id    Int
  gym_id     Int

  user User @relation(fields: [user_id], references: [user_id])
  gym  Gym  @relation(fields: [gym_id], references: [gym_id])
}

model Payment {
  payment_id     Int      @id @default(autoincrement())
  amount         String
  date           DateTime
  payment_method String
  user_id        Int
  membership_id  Int

  user       User       @relation(fields: [user_id], references: [user_id])
  membership Membership @relation(fields: [membership_id], references: [membership_id])
}

model Inventory {
  product_id Int    @id @default(autoincrement())
  name       String
  type       String
  quantity   Int
  gym_id     Int

  gym Gym @relation(fields: [gym_id], references: [gym_id])
}

model Exercise {
  exercise_id Int    @id @default(autoincrement())
  name        String
  description String
  user_id     Int

  user User @relation(fields: [user_id], references: [user_id])
}
